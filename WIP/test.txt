𝑏,𝑙,𝑠,ᔐ = bool, list, set, str
⮌ functools ⨡ reduce
⮌ itertools ⨡ filterfalse, product

getitem, setitem = 󰲣x[y], 󰲥x.__setitem__(y,z)
setattr_ret_ = 󰲧setattr(y,z,w) ∨ w
setitem_ret_ = 󰲧setitem(y,z,w) ∨ w
OP_DUPER_ = f↦󰲡f(x,x,⠤𝔸,⠶𝕂) # _1d460
OP_SWAPA_ = f↦󰲣f(y,x,⠤𝔸,⠶𝕂)
NULL = object()
✓,✗ = ⴳ,ⴴ = 𝕋,𝔽 = True, False
ᗜ = □ = None
ᐦ = ''

LITERAL_OPS_ = {
    ␛∧: 󰲣x∧y, ␛∨: 󰲣x∨y, ␛+: 󰲣x+y, ␛-: 󰲣x-y,
    ␛*: 󰲣x⋅y, ␛/: 󰲣x/y, ␛<: 󰲣x<y, ␛>: 󰲣x>y,
    ␛|: 󰲣x|y, ␛&: 󰲣x&y, ␛^: 󰲣x^y, ␛%: 󰲣x%y,
    "==":󰲣x≡y,"!=":󰲣x≠y, "<=":󰲣x ≤y,">=":󰲣x ≥y,
    "//":󰲣x⹏y,"**":󰲣x⌃y, "<<":󰲣x<<y,">>":󰲣x>>y,
    "not":󰲣¬x,
    "is":󰲣x≅y, "is not":󰲣x≇y,
    "in":󰲣x∈y, "not in":󰲣x∉y }

⊢ ⨳´(α, β):
    assert α, 𝕝(β, ᐦ)
    return α
𝕝, 𝕣 = 󰲡[*𝔸]¿x≅NULL¡[x], 󰲡x󰈲󰲡x≇NULL

⊂ = 󰲣𝑠(x).issubset(𝑠(y))
⊃ = 󰲣𝑠(y).issubset(𝑠(x))
⊊ = 󰲣𝑠(α≔x).issubset(𝑠(β≔y)) ∧ α≠β  󰤱 negations
⊋ = 󰲣𝑠(α≔y).issubset(𝑠(β≔x)) ∧ α≠β  󰤱 negations
⊄ = 󰲣¬(x⊂y)
⊅ = 󰲣¬(x⊃y)
∪ = 󰲣𝑠(x) | 𝑠(y)
∩ = 󰲣𝑠(x) & 𝑠(y)
∖ = 󰲣𝑠(x) - 𝑠(y)
⨉ = 𝚲product(⠤𝕣(𝔸))ᴍ𝑙
∋ = 󰲣y ∈ x
∌ = 󰲣y ∉ x
ᐹ = isinstance

🃌 = 󰲡len(x)
↨ = 󰲡𝑙(enumerate(x))
ᴙ = 󰲡𝑙(x)﹕﹕₋₁
⍉ = 󰲡ζ(⠤x)
⭥ = 󰲡𝑙(range(x))
⛶ = 󰲡[x]
! = 󰲡1…←x+1→Π1
… = 󰲣𝑙(range(x,y))

◄, ► = 󰲣x, 󰲣y
⋀, ⋁ = all, any
☾ = 𝚲print(⠤𝔸,⠶𝕂)∨𝔸₀
ζ = 𝚲𝑙(zip(⠤𝕣(𝔸)))
ᴍ = 󰲣𝑙(map(y,x))
ſ = 󰲣reduce(y,x,⠤𝕣(𝔸))
Π = 󰲡ſ´(x,⋅,⠤𝕣(𝔸))
Σ = 󰲡ſ´(x,+,⠤𝕣(𝔸))
󰈲 = 󰲡𝑙(filter     (⠤𝕝(⠤𝔸,□),x))
󰈳 = 󰲡𝑙(filterfalse(⠤𝕝(⠤𝔸,□),x))
󰒼 = 󰲣sorted(x,key=𝕝(y,□)₀)
󰒽 = 󰲣sorted(x,key=𝕝(y,□)₀,reverse=✓)
∘ = 󰲣x(y)
○ = 󰲣𝚲x(y(⠤𝔸,⠶𝕂))
⋄ = 󰲣(x¿xᐹ𝑙¡⛶x→+[y])
⨁ = 󰲣𝑏(x)≡𝑏(y)
⊻ = 󰲣𝑏(x)^𝑏(y)  ∧←x∨y
⊼ = 󰲣𝑏(x)∧𝑏(y)→¬∧←x∨y

⨳   "ab" ⊂ "abc"
⨳   "ab" ⊂ "ab"
⨳  "abc" ⊃ "ab"
⨳   "ab" ⊃ "ab"
⨳   "ab" ⊊ "abc"
⨳  "abc" ⊋ "ab"
⨳ ¬("ab" ⊋ "ab")
⨳ ¬("ab" ⊊ "ab")
⨳ "ab"⨉꜠ ≡ [␛a⋄␛a, ␛a⋄␛b, ␛b⋄␛a, ␛b⋄␛b]
⨳ 𝑙∘'aa' ≡ 𝑙("aa")
⨳ 𝑙○𝑠∘'aab' ∈ [␛a⋄␛b, ␛b⋄␛a]
⨳ 𝚲𝔸󰈲󰲡␛1∈x󰅂Σᐦ󰅂(‹ab›, ‹a1b›, ‹1dd›) ≡ "a1b1dd"

⨳ 'deab' 󰒼 ≡ 𝑙("abde")
⨳ 'deab' 󰒽 ≡ 𝑙("edba")

⨳ 󰲣x󰒼yⁱⁿᵈᵉˣΣᐦ󰅂("deaaabb", "bbdae") ≡ "bbdaaae"

⭥20ſ+→☾

x ≔ 10
y = 2 * x += x → ☾
☾ x


(x.y += 1)


🟑
1…10 ᴍ ⹏´꜠ → ☾
 x ∈ y ∉ z
 2 > 1 > 0 
☾ ← 3 ⹏ 2
 ⟥´꜠ᵜ⟤
