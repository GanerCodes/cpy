 all this be weird
 󰤱 󰮈 work with ℵ
󱀘 aleph_wrapper:
    __slots__ = ␛x,
    __init__ = ⥌𝕊,y↦□◄𝕊ˣ≔y
    __repr__ = 𝕊↦𝕊ˣ
    __call__ = 𝕊↦𝕊ˣ(⠤𝔸,⠶𝕂)
󱀘 ℵ´(𝑑):
    𝐶𝑛 = ␛ℵ
    __init__ = 𝕊↦super().__init__(⠤𝔸,⠶𝕂)
    __repr__ = 𝕊↦‹⟦𝕊.__class__.𝐶𝑛⟧⟦‹[⟦h₀⟧]›¿0∈(h≔𝕊.__dict__)¡ᐦ⟧(⟦␛,𝘀→.join←𝕊.itemsꟿ󰲣‹⟦x⟧=⟦y⟧›⟧)›
    __json__ = ⥌𝕊,cb,⠤𝓐,⠶𝓚↦ 𝑑(𝕊) ꟿⱽ 󰲣cb(y,⠤𝓐,⠶𝓚)
    __setattr__ = 𝑑.__setitem__
    __getitem__ = ⥌𝕊,x↦x∈𝕊 ⭜𝑑.__getitem__(𝕊,x)⭝ 𝕊.getdef()
    __getattr__ = __getitem__
    __iter__ = 𝕊↦iter(𝕊.items())
    __call__ = 𝕊↦𝑑.update(𝕊,⠤𝔸,⠶𝕂)►𝕊
    __bool__ = 𝕊↦𝕊🃌>0
    __or__   = ⥌𝕊,x↦𝕊.copy()(x)
    ⊢ __getstate__(𝕊):
        ¿𝕊.hasdef(): ↪𝑑(𝕊), 𝕊.getdef()
        ¡          : ↪𝑑(𝕊),
    ⊢ __setstate__(𝕊, s):
        𝕊.__init__(s₀)
        ¿s🃌 > 1: 𝕊.setdef(s₁)
    ⊢ __pow__(𝕊, x):
        ¿x≡-: ↪𝑙∘𝕊.keys   
        ¿x≡+: ↪𝑙∘𝕊.values 
        ¿x≡*: ↪𝑙∘𝕊.items  
        ¿x≡^: ↪𝕊.copy ᣆ􋉌􋕝ᵍᵉᵗᵈᵉᶠ􋅯􍪫ᵛ􀸳󰀂􋁟ᵃˡᵉᵖʰ􋕟ʷʳᵃᵖᵖᵉʳ 󰲡x.setdef(C(v))
        ✗⨳
    hasdef = ⥌𝕊↦0∈𝕊.__dict__
    getdef = ⥌𝕊  ↦𝕊.__dict__₀ ᣆ􋐏ˣ􊾗ᵃˡᵉᵖʰ􋕟ʷʳᵃᵖᵖᵉʳ 
    setdef = ⥌𝕊,x↦𝕊.__dict__₀≔x →► 𝕊
    ⊢ copy(𝕊):
        r = type(𝕊)(super().copy())
        ¿𝕊.hasdef(): r.setdef(𝕊.getdef())
        ↪r
󱀘 ℶ´(ℵ´):
    𝐶𝑛 = ␛ℶ
    __iter__ = 𝕊↦iter(𝕊.values())
󱀘 _hwrap(𝑑):
    ⊢ __init__(𝕊, 𝑐): 𝕊􋇑, 𝕊􋇛 = 𝑐, 𝑐􋆷􋇛
    __getitem__ = ⥌𝕊,x↦𝕊􋇑().setdef(x)
    __setitem__ = ⥌𝕊,x,y↦(⒯≔𝕊􋇑()).__setitem__(x,y) →►← ⒯
    __call__ = 𝕊↦𝕊􋇑(⠤𝔸,⠶𝕂)
    __or__   = ⥌𝕊,x↦𝕊􋇑()|x
    __pow__  = ⥌𝕊,x↦𝕊􋇑()⌃x
    __repr__ = 𝕊↦‹⟦𝕊􋇛⟧()›
    __bool__ = 𝚲✗
ℵ = _hwrap(ℵ´)
ℶ = _hwrap(ℶ´)