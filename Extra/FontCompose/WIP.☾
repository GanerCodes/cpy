GRAM = ␛
󰦥󰦥󰦥󰦥󰦥
main = (󰆴Ω? ↷ (compose_rule ∨ style_rule))*

tuple = chain ∨ (󰆴sep (󰆴sep ✓)*)
brack = 󰆴'⦑' 󰆴W? ⠶tuple? 󰆴'⦒' 󰆴W?
pair  = ƨ(word) 󰆴W? ⠶brack
sep   = '|' 󰆴W?
chain = (pair ∨ word)+ 󰆴W?

compose_rule = compose_head ⟶ (compose_body ∨ body_recurse)
  style_rule = 󰆴'⦑' 󰆴W? style_head 󰆴'⦒' 󰆴W? ⟶ style_body

compose_head = mac_head ∨ seq_head
mac_head = ¡ ~‹[^ \t\n¡␠⟶]+› (¡ seq_head)?
seq_head = seq_head_pattern (🡺 style_head 🡺)?
seq_head_pattern = ⠶((macref ∨ looper ∨ concat ∨ letter) 󰆴W?)+

style_head = tuple
style_head_typed = ~‹[ℭℜ]› ⟶

body_recurse = 󰆴'⦑' ⠶main 󰆴'⦒'

style_body = (body_recurse ∨ (style_body_chars = ~‹[^\n]*›))
compose_body = ((str ∨ ¬Ω ~‹.›) 󰆴w?)+

macref = 󰆴"⟨" 󰆴W? ƨseq_head_pattern 󰆴"⟩"
looper = 󰆴"⟦" 󰆴W? ⠶seq_head_pattern 󰆴"⟧"
concat = 󰆴"⁅" 󰆴W? ⠶seq_head_pattern 󰆴"⁆"
letter = ~‹[^⟨⟩⟦⟧⁅⁆⦑⦒⟶🡺]›
word   = ⠶ƨ((str ∨ ~‹[^|⦑⦒⟶🡺 \t]+›) 󰆴W?)
str    = ⠶ƨ(escape ∨ (󰆴‹"› ↷ (~‹[^␛"]› ∨ escape)*))
escape = 󰆴‹␛␛› ~‹.?›

⟶ = 󰆴(W? ↷ '⟶')
🡺 = 󰆴(W? ↷ '🡺')
¡ = 󰆴(W? ↷ '¡')

w = ~‹[ \t]+›
W = ~‹[ \t\n]+›
Ω = ~‹[ \t\n␠]+›
󰦥󰦥󰦥󰦥󰦥

dat = ␛
󰦥󰦥󰦥󰦥󰦥 c⦑0f0⦒ ⟶ ⦑
  ¡wb⟨ALPHA⟩ ⟶𝐀𝐁𝐂𝐃𝐄𝐅𝐆𝐇𝐈𝐉𝐊𝐋𝐌𝐍𝐎𝐏𝐐𝐑𝐒𝐓𝐔𝐕𝐖𝐗𝐘𝐙
  wbᴍ⟨greek⟩ 🡺c⦑f00⦒🡺 𝝰𝝱𝝲𝝳𝝴𝝵𝝶𝝷𝞋𝝸𝝹𝝺𝝻𝝼𝝽𝝿𝞀𝞁𝞂𝞃𝞄𝞅𝞆𝞇𝞈𝞉𝞍𝝘𝝙𝝯𝝝𝝣𝝥𝝨𝝫𝝭𝝮
⦒
c⦑f00⦒ ⟶ ℜ ⟶ aosidjiao 󰦥󰦥󰦥󰦥󰦥