 󰤱 make stuff like ⎺⟍_⟨ᐛ⟩_⟋⎺ have sup/sub scripts
 󰤱 make unions work nice with dicts
 󰤱 make parition function (filter + map_func(default = 𝑏) into a dict)
 󰤱 make peggle give better errors

𝔦𝔪𝔭 ← ␛s
󰋺   ← ␛🌈
⮌ peggle ⨡ Parser, Node
⮌ tempfile ⨡ NamedTemporaryFile as NTF
⮌ json5 ⨡ load as jl
⮌ json  ⨡ dumps as jds

fargs = ƒ↦ƒ.__code__.co_varnames[:ƒ.__code__.co_argcount]

gen, gens = n↦ƒ↦gensₙ≔ƒ, {}

gram = 󰦥󰦥󰦥󰦥󰦥
main = 󰆴W? (rule 󰆴W?)*
rule = ( tuple
         ƨ(((󰆴(W? ↷ '⟶')) ↷ ~‹[ℭℜ]›))
         ~‹[^\n]*› ) 
tuple = ⮞(chain ∨ sep) (󰆴sep ✓)? ((chain ∨ ✓) 󰆴sep)* chain? 󰆴W?
brack = 󰆴'⦑' 󰆴W? tuple? 󰆴'⦒' 󰆴W?
chain = (pair ∨ word)+ 󰆴W?
pair  = ƨ(word) 󰆴W? ⠶brack
word  = ~‹[^|⦑⦒⟶ ]+› 󰆴W?
sep   = '|' 󰆴W?

w = ~‹[ \t]+›
W = ~‹[ \t\n]+›
󰦥󰦥󰦥󰦥󰦥

@gen("c")
⊢ _(x=□, y=□, z=□):
    ↪{ ⠶x∧{          "color": 🌈.h2hl←x}∨{},
       ⠶y∧{"backgroundColor": 🌈.h2hl←y}∨{},
       ⠶z∧{    "borderColor": 🌈.h2hl←z}∨{} }
@gen("B")
⊢ _(x, y=1, r=1): ↪ { "borderStyle" : ‹s solid d dashed›⍭⥉𝑑→ₓ,
                      "borderWidth" : ‹⟦y⟧px›,
                      "borderRadius": ‹⟦r⟧px›}
@gen("b")
⊢ _(): ↪ {"fontStyle": "bold"}
@gen("u")
⊢ _(x=1): ↪ {"textDecoration": ‹underline ⟦x⟧px›}

Ɱ = 𝑜

⊢ decor(n):
    r = {}
    ∀ε∈n:
        t = εᵗ
        ¿t ≡ "word":    
            r |= gens[ε.txt]
        ⸘t ≡ "pair":
            ƒ = gens[εᶜ₀.txt]
            ə = εᶜ₁ ᴍ󰲡□ ¿xᵗ≡␛✓¡ x.txt
            r |= ƒ(⠶{k:v∀k,v∈fargs(ƒ)ζə¿k≇□})
    ↪ r ∨ n.txt

⊢ generate_colormap(dat):
    O = Parser∘gram∘dat

    esc = 󰲣y ſˣ 󰲣x.replace(⠤y)

    res = {}
    ∀(h,t,b)∈O:
        t, b = t.txt, b.txt
        ¿t≡␛ℭ: b=‹([⟦esc(b, ‹] \] -‍ \-›⍭)⟧]+)›
        res = {"decorations": h ᴍ 󰲡decor(x)∨{}}
    ↪ res

⊢ edit_settings(dat, p):
    p = 𝐩∘p→.expanduser.resolve
    shutil.copy(p, x≔𝐩←NTF(delete=ⴴ).name)
    ☾‹Backing up old settings to temp file: ⟦x⟧›,
    
    dat = generate_colormap(dat)
    jargs = ℵ(ensure_ascii=✗, indent=□, separators=",:")
    j = jl(p.open←"rb")
    
    nj = dat | j.get("☾.highlight_extra", {})
    TXT = (p.open←"r"→.read)
    inj = ‹𝗻𝘁/*DON'T REMOVE THE START/END COMMENTS IN THIS SECTION THIS IS HOW WE FIGURE OUT WHERE EVERYTHING IS*/𝗻𝘁"highlight.regexes": ⟦jds(nj, ⠶jargs)⟧›
    S, E = "BEG PLEAD"⍭ᴍ󰲡‹/*󰦥󰦥󰦥⟦x⟧󰦥󰦥󰦥*/›
    (q≔S⋄Eᴍ󰲡x∈TXT󰅂Σ→∈0⋄2) ⨳ "Malformed indicators!"
    TXT = TXT﹕₋₁.rstrip.rstrip∘␛, + TXT₋₁
    ¿¬q:
        "Creating indicators!"☾
        ¿¬(TXT≔TXT.rstrip).lstrip: TXT = ␛{⋄␛}
        TXT₋₁≡␛} ⨳ "Please don't end your settings with a comment!"
        txt=TXT⥉𝑙
        txt₋₁﹕ = ‹,𝗻𝘁⟦S⟧⟦inj⟧⟦E⟧𝗻}›
    ¡:
        txt=TXT⥉𝑙
        txt[TXT.index∘S+S🃌:ei] = inj+␛,⋅((ei≔TXT.index∘E)+E🃌<TXT🃌-2)
    p.open∘␛w→.write(txtΣᐦ)