 ☾ (1󷸻7 ᑀ⨉􍪸󱑼⟞🃌⋅₊󰄎₋􊫿󰄎􊯅ᴍ←≺ſᐘ 3)


f= 󷺹ᚤ≡⟞𝌂󰻾ᐵ₀
f= 󷺹𝌂󰻾🃌≡🃌ᚤ⟞
 f= ≡○🃌○􍭌󰄎􍪒
f(‹aaabccccc›)☾
f(‹aaabccaccc›)☾

🟑
 f= 󷺹⨉²ꟿ≡´⨁󷰿≡⟞🃌
f= 󷺹🃌-1≡🃌ᚤ⟞

f([1,2,1])☾
f([1,2,3])☾
f([1,1,1])☾

 previous versions
 f=󰲡󷺹+⛶←󷺹≤0→-⟞ᐸ⊚ᐳ√⫰(⟞􍨄-⟝)%1→¬∧⟞∌󷺽∘0ᐸ⊚󷺹🃌≡x+1ᐸ∘⛶0
 f=󷺹⭥ſ⁰􋄎󷺹+⛶←󷺹<1→-⟞ᐸ⊚ᐳ√⫰(⟞􍨄-⟝)%1→¬∧⟞∌󷺽∘0

f=󷺹⭥ſ⁰􋄎󷺹+⛶←󷺹<1→-⟞ᐸ⊚ᐳ√⫰(⟞􍨄-⟝)%1󷺥⟞∋󷺽∘0


f(10)☾


f= 󷺹﹕􍨄ᴙᴍ𝑖Ϝ+⨁→%11≡⟞􍨄󷹜
f= 󷺹﹕􍨄ᴙᴍ𝑖Ϝ+⨁-⟞􍨄󷹜→%11→¬
f= 󷺹ᴙᴍ𝑖Ϝ+⨁⟞₇󷹜⋅2∣ᵜ11
f= 󷺹ᴙᴍ𝑖Ϝ-⨁⟞₇󷹜⋅4∣ᵜ11
 f= 󷺹ᴙᴍ𝑖Ϝ+⨁⟞!󷹜⋅2∣ᵜ11
f= 󷺻11∣⟞ᴙ󷹝Ϝ⁶+⨁⟞₇󷹜⋅2
f= 󷺹ᴙ󷹝Ϝ􍨅+⨁⟞󷹝₇2∣ᵜ11


f("00000000")☾
f("13724857")☾
f("01349035")☾
f("00000002")☾
f("08108759")☾
f("06765774")☾

f=󷺹>1⭜f(⟞-1)+1≕c-←f∘c≠⟞⹏3⭝0
f=𝑖○󷺹>1∧←f(⟞-1)+1≕c-←f∘c≠⟞⹏3

f(0)☾
f(1)☾
f(2)☾
f(27)☾
f(53)☾


 f=󰲡11∣x﹕􍨄󱑼7󷸺ᐵᴍ𝑖≺⋅ᐸ⨁¯󷹜x􍨄
 f=󰲡11∣x﹕􍨄Ϝ+ᐵ􍨄󷹜⋅🃌⟞ᐸ⨁¯󷹜x􍨄

f= 󷺹﹕􍨄ᴙϜ+⨁→󷹜12%11≡⟞􍨄󷹜

󷺹                   func of 1 argument, inserted here
 ﹕􍨄                 up to element -1
   ᴙ                reverse
    Ϝ               accumulate over
     +              addition
      ⨁             sum
       →            group left for order of operation and avoid ⨁ optional right arg
        󷹜           swap str and int using base
         12         12
           %        modulo
            11      11
              ≡     equivalence check, ==
               ⟞    the argument of the function from 󷺹
                􍨄   index -1
                 󷹜  swap str and int using base (default 10, so not necessary)

➰✓:☾􋕩􋕩␛A
 4⁵☾


☾+🃌␛␛␛☾+🃌␛␛␛


 quarantine:
🟑
 ☾←1🟑+1☾←1🟑+1
🟑

 (f≔󰻾)∘1→☾○f
₃+₀→󰈳([☾☾􋕩􋕩,☾􋕩􋕩]⋅12)



f=󷺹∌"cie"∧⋀(⟞󷹌"ei"󰈳"ei"→﹕􍨄ᐵ􍨄﹕≡␛c)
f=󷺹∌"cie"∧⋀←⟞󷹌␛c↨ᐵ₁ 􊴎􊮎􍪴􊬣﹕∌"ei"
f("ceiei")☾
f("ceicei")☾
f("ei")☾
f("ie")☾
f("miecie")☾
f("ceiceimie")☾


f=󷺹𝌂󰻾ᐵ₀ᐸᙧ2⭥ᐖ󷰾􍪵􌿑􋁉􋕩ᵃᶜᵇᵃ􋕩ᐸ⨁→⹏3
f=󷺹🃌-1→⹏3⋅󷰾􋕩ᵃᵇ􋕩􋁊􍪵􋄱ᐸ○←⊜󷺹Ϝ􋋎􋋎󷺹􍧰≡⟝⭜⟞﹕􍨄⭝⟞+󷺽→􍨄󰈳𝘀ᐸ○󷺹𝌂󰻾ᐵ₀ᐸ⨁
f=󷺹🃌-1→⹏3⋅󷰾􋕩ᵃᵇ􋕩􋁊􍪵􋄱ᐸ○
    ←⊜󷺹Ϝ􋋎􋋎󷺹􍧰≡⟝⭜⟞﹕􍨄⭝⟞+󷺽→􍨄󰈳𝘀ᐸ
        ○󷺹𝌂󰻾ᐵ₀ᐸ⨁
 abc, abca, abcab, abcabc, 
 abcabcabcbac ⇒ abcabcabac ⇒ abcabcac

⨳f(‹abca›)≡1
⨳f(‹accbbbaa›)≡󷰾
⨳f(‹abcacba›)≡0
⨳f(‹abcabcab›)≡2
⨳f(‹abababababababcababababababab›)≡1
⨳f(‹abcbca›)≡1
⨳f(‹abcabcacb›)≡1
☾‹all tests pass›



󷰿,󷰾,0,1,2 → 󷰾,1,0,󷰾,1
0,1,2
00,01,10
000,011,110

1-x→%3-1

f=󷺹∣⟝󷺒⟞󱖔ᶠ⟝⹏⟞󷺿
 f=󰲣󷺹⹏xᐸ⊛󷺹%xᐸ∘y→🃌%2
f=󰲣x⋅y󷹜ˣ0𝌂󰻾→􍨄🃌%2
f=󷺹⋅⟝󷹜􍪵0𝌂󰻾→􍨄🃌%2󷺿


1…20ᴍ󰲡f(2,x)󰅂→☾ ≡[1,3,4,5,7,9,11,12,13,15,16,17,19]
1…20ᴍ󰲡f(3,x)󰅂→☾ ≡[1,2,4,5,7,8,9,10,11,13,14,16,17,18,19]
1…20ᴍ󰲡f(4,x)󰅂→☾ ≡[1,2,3,5,6,7,9,10,11,13,14,15,16,17,18,19]

 split ᔐ into sub-palindromes, greedy algorithm
f=󰲡󷺹﹕􍧰+[⟞􍧰 ﹕􍨄,⟞􍧰 􍨄+⟞􍨄]ᐸ⊚󷺹􍧰≡ᴙ⟞􍧰ᐸ○ᵜ󷺹+[ᐦ]ᐸ🟕󷺹􍧰ᐸ∘x⋄ᐦ→􍨄 ﹕􍧰

 split ᔐ into sub-palindromes, least possible
f=󰲡⋀○󷺺≡ᴙ⟞ᐸ≕g►⋁○ᐳg∘󷺾⊚ᵜ󷺹󷺺􍨄🃌󷸸→ᴍ󰲡⟞﹕􍨄+⟞􍨄𝌂xᐸ⨁ᐸ∘􊬴→󰑅g

 inefficient, but idea for max golf?
f=󰲡(2􋌵ˣ⭥ᐖx⭥𝌂ᐳ⟞󷹜²🃌x→􍪸󷺿ᐵ󷺼x􍪴ᐸ⨁)󰒼🃌→󰑅←⋀○󷺺≡ᴙ⟞
f=󰲡2ˣ􋌵⭥ᐵ󷹜²🃌xᑀ􍪸󷺿𝌂ᵜ⭥xᐵ󷸻ᵜx⨁ᐸᐸ󰒼🃌󱖔􋔭⋀○󷺺≡ᴙ⟞

f(‹abcbabcbaabc›)☾
 ᴥ

 transfer character??
󱁥(x,y,s=1):
    ¿s>1:
        ¿y≡⍁∨y₀ᐹ𝑖: ↪xᴍˢ⁻¹󰲡󱁥(x,y)
        ¡: ↪xᴍ󰲡󱁥(x,y,s-1):  redo

[2,3,4,5]󱁥1 = [1,3,4,6]
[‹abc›,‹def›,‹ghi›]󱁥1 = [‹ab›,‹cde›,‹fghi›]
[‹abc›,‹def›,‹ghi›]󱁥[1] = [‹ab›,‹cdef›,‹ghi›]

[2,3,4,5]󱁥[1,2,1] = [1,2,5,6]
 󰲣⟨󷺹-󷹘+⍖⟩󰄗₀󰄎􊱦􊫠󰄎₀󰄘∘x


[‹abc›,‹def›,‹ghi›]󱁥[2,1] = [‹a›,‹bcde›,‹fghi›]
 󰲣⟨󰲡󷹘+x→𝌂←-⍖→≕t→₁󷹗►t₀⟩󰄗₀󰄎􊱦􊫠󰄎₀󰄘∘x

 abcbabcbaabc


 given a list of ᔐ, determine if there is a ᔐ that makes all palindrome




f=󷺹⭥󰈲ᐳ⟝≥󷹜⟝ᴙ󷹜≡⟞-󷺽→🃌
f=󷺹⭥󰈲⟞ᑀ-⟝≡󷹜⟝ᴙ󷹜≤󷺽→🃌
f=󷺹⹏2󷸻⟞ᴍᐳ󷹜⟝ᴙ󷹜→+󷺽󰈲⟞→🃌
 fail f=󷺹󷸹→󰈲󰲡⋀(ᐳ⟝≤0∨⟞≡ᑈx±←𝑖○ᴙ○ᔐ∘x)
 f=󰲡𝑖○ᴙ○ᔐ∘x→±x
f(1069)☾



f=󰲣x󰒽→+􋔚⋅y→Ϝ􊿥􌾝􊿥􋂇ʸ󰲣􌾔₀+⬅x󰒼-´≕t→₁﹕ᐵ₀⋄←⟞₁+←t₀≺-󰅂ᴍ󷺺₀ᐸᙧ1⋄0ꟿ∖´⨁→₁﹕
f([60,50,40,20,29,30],4)☾
[ [ 0, 0], [ 0, 0], [ 0, 0], [ 0, 0] ]
[ [60, 0], [ 0, 0], [ 0, 0], [ 0, 0] ]
[ [60, 0], [50, 0], [ 0, 0], [ 0, 0] ]
[ [60, 0], [50, 0], [40, 0], [ 0, 0] ]
[ [60, 0], [50, 0], [40, 0], [30, 0] ]
[ [29, 0], [60,30], [50,30], [40,30] ]
[ [20, 0], [29,10], [60,40], [50,40] ]
[ [ ∞, 0], [20,10], [29,20], [60,50] ]
[ [ ∞, 0], [ ∞, 9], [20,19], [60,59] ]
[ [ ∞, 0], [ ∞, 0], [ ∞, 9], [60,60] ]
[ [ ∞, 0], [ ∞, 0], [ ∞, 0], [ ∞, 9] ]



ƒ=f
⊢ test(x, y):
    ☾‹⟦x⟧ → ⟦ƒ(⠤x)≕h⟧›
    ⨳ y≡h
test(([5,4,3,2], 4),                                              [2, 3, 4, 5])
test(([50,40,30,20,11], 4),                                       [20, 30, 11, 40, 50])
test(([50,40,30,20,11,12], 4),                                    [20, 30, 12, 40, 11, 50])
test(([51,40,30,20,11,12,106], 4),                                [30, 40, 20, 51, 12, 11, 106])
test(([51,40,30,20,11,13,106,500,401,302,201,116,121,1068,1], 6), [121, 201, 116, 51, 302, 106, 20, 40, 30, 1, 11, 13, 401, 500, 1068])
test(([60,50,30,29,20], 4),                                       [29, 30, 20, 50, 60])


f=󷺹󷸻→ᴙ↨󰈲󰲡g≔󰲣y⋅󷹜(󷹜x󰈳󷺹∈y󷹜ᐸ⨁ᐦ)󰅂→(⠤x)≡g(⠤ᴙx)
f(80)☾



 f=󰲡x(ᐒx.count(⟞))⨁🃌x
f=󷺹ᐳ🃌←⟞󰈲󷺽⨁🃌ᚤ⟞
f("󷺹ᐳ🃌←⟞󰈲󷺽⨁🃌ᚤ⟞")☾


⟨GREEN⟩ ⟦
    ⁅W⟨ALPHA⟩𝕊 ⟶ ѦცƇƊ⋿ҒႺ◌Ι◌◌ꝈⱮ◌◌◌◌ⴽ𝖲Ƭ◌Ѵ◌Ҳ◌Ζ⁆
    ⁅W⟨alpha⟩𝕊 ⟶ ◌◌◌◌◌◌◌◌◌◌◌◌Ӎ◌◌◌◌◌◌◌◌ѵ◌◌◌◌⁆
    ⁅w⟦fF⟧𝕊⟶ƒ󰊕⁆ ⟧
𝔸𝐚𝑎𝗮𝚊ⓐ⒜󰫮𝔞𝖆𝒶𝓪𝕒𝐀𝐴𝗔𝙰Ⓐ🄐𝔄𝕬𝒜𝓐🅐🄰󰬈ɒ
𝔹𝐛𝑏𝗯𝚋ⓑ⒝󰫯𝔟𝖇𝒷𝓫𝕓𝐁𝐵𝗕𝙱Ⓑ🄑𝔅𝕭ℬ𝓑🅑🄱󰬉ც
ℂ𝐜𝑐𝗰𝚌ⓒ⒞󰫰𝔠𝖈𝒸𝓬𝕔𝐂𝐶𝗖𝙲Ⓒ🄒ℭ𝕮𝒞𝓒🅒🄲󰬊𝼝
𝔻𝐝𝑑𝗱𝚍ⓓ⒟󰫱𝔡𝖉𝒹𝓭𝕕𝐃𝐷𝗗𝙳Ⓓ🄓𝔇𝕯𝒟𝓓🅓🄳󰬋𝼥
𝔼𝐞𝑒𝗲𝚎ⓔ⒠󰫲𝔢𝖊ℯ𝓮𝕖𝐄𝐸𝗘𝙴Ⓔ🄔𝔈𝕰ℰ𝓔🅔🄴󰬌⋿
𝔽𝐟𝑓𝗳𝚏ⓕ⒡󰫳𝔣𝖋𝒻𝓯𝕗𝐅𝐹𝗙𝙵Ⓕ🄕𝔉𝕱ℱ𝓕🅕🄵󰬍ꬵ
𝔾𝐠𝑔𝗴𝚐ⓖ⒢󰫴𝔤𝖌ℊ𝓰𝕘𝐆𝐺𝗚𝙶Ⓖ🄖𝔊𝕲𝒢𝓖🅖🄶󰬎ꬶ
ℍ𝐡ℎ𝗵𝚑ⓗ⒣󰫵𝔥𝖍𝒽𝓱𝕙𝐇𝐻𝗛𝙷Ⓗ🄗ℌ𝕳ℋ𝓗🅗🄷󰬏ҕ
𝕀𝐢𝑖𝗶𝚒ⓘ⒤󰫶𝔦𝖎𝒾𝓲𝕚𝐈𝐼𝗜𝙸Ⓘ🄘ℑ𝕴ℐ𝓘🅘🄸󰬐їî󷱪
𝕁𝐣𝑗𝗷𝚓ⓙ⒥󰫷𝔧𝖏𝒿𝓳𝕛𝐉𝐽𝗝𝙹Ⓙ🄙𝔍𝕵𝒥𝓙🅙🄹󰬑𝼚ĵ󷱽
𝕂𝐤𝑘𝗸𝚔ⓚ⒦󰫸𝔨𝖐𝓀𝓴𝕜𝐊𝐾𝗞𝙺Ⓚ🄚𝔎𝕶𝒦𝓚🅚🄺󰬒𝼐󷺈󷱾
𝕃𝐥𝑙𝗹𝚕ⓛ⒧󰫹𝔩𝖑𝓁𝓵𝕝𝐋𝐿𝗟𝙻Ⓛ🄛𝔏𝕷ℒ𝓛🅛🄻󰬓ꬷℓ
𝕄𝐦𝑚𝗺𝚖ⓜ⒨󰫺𝔪𝖒𝓂𝓶𝕞𝐌𝑀𝗠𝙼Ⓜ🄜𝔐𝕸ℳ𝓜🅜🄼󰬔Ӎ
ℕ𝐧𝑛𝗻𝚗ⓝ⒩󰫻𝔫𝖓𝓃𝓷𝕟𝐍𝑁𝗡𝙽Ⓝ🄝𝔑𝕹𝒩𝓝🅝🄽󰬕ꬼ
𝕆𝐨𝑜𝗼𝚘ⓞ⒪󰫼𝔬𝖔ℴ𝓸𝕠𝐎𝑂𝗢𝙾Ⓞ🄞𝔒𝕺𝒪𝓞🅞🄾󰬖ϙ
ℙ𝐩𝑝𝗽𝚙ⓟ⒫󰫽𝔭𝖕𝓅𝓹𝕡𝐏𝑃𝗣𝙿Ⓟ🄟𝔓𝕻𝒫𝓟🅟🄿󰬗ƿ℘
ℚ𝐪𝑞𝗾𝚚ⓠ⒬󰫾𝔮𝖖𝓆𝓺𝕢𝐐𝑄𝗤𝚀Ⓠ🄠𝔔𝕼𝒬𝓠🅠🅀󰬘𝼛
ℝ𝐫𝑟𝗿𝚛ⓡ⒭󰫿𝔯𝖗𝓇𝓻𝕣𝐑𝑅𝗥𝚁Ⓡ🄡ℜ𝕽ℛ𝓡🅡🅁󰬙Ʀ
𝕊𝐬𝑠𝘀𝚜ⓢ⒮󰬀𝔰𝖘𝓈𝓼𝕤𝐒𝑆𝗦𝚂Ⓢ🄢𝔖𝕾𝒮𝓢🅢🅂󰬚𝼞
𝕋𝐭𝑡𝘁𝚝ⓣ⒯󰬁𝔱𝖙𝓉𝓽𝕥𝐓𝑇𝗧𝚃Ⓣ🄣𝔗𝕿𝒯𝓣🅣🅃󰬛ŧ
𝕌𝐮𝑢𝘂𝚞ⓤ⒰󰬂𝔲𝖚𝓊𝓾𝕦𝐔𝑈𝗨𝚄Ⓤ🄤𝔘𝖀𝒰𝓤🅤🅄󰬜ꭒ
𝕍𝐯𝑣𝘃𝚟ⓥ⒱󰬃𝔳𝖛𝓋𝓿𝕧𝐕𝑉𝗩𝚅Ⓥ🄥𝔙𝖁𝒱𝓥🅥🅅󰬝ѵѴ
𝕎𝐰𝑤𝘄𝚠ⓦ⒲󰬄𝔴𝖜𝓌𝔀𝕨𝐖𝑊𝗪𝚆Ⓦ🄦𝔚𝖂𝒲𝓦🅦🅆󰬞ꭐ
𝕏𝐱𝑥𝘅𝚡ⓧ⒳󰬅𝔵𝖝𝓍𝔁𝕩𝐗𝑋𝗫𝚇Ⓧ🄧𝔛𝖃𝒳𝓧🅧🅇󰬟ꭘ
𝕐𝐲𝑦𝘆𝚢ⓨ⒴󰬆𝔶𝖞𝓎𝔂𝕪𝐘𝑌𝗬𝚈Ⓨ🄨𝔜𝖄𝒴𝓨🅨🅈󰬠ꭚ
ℤ𝐳𝑧𝘇𝚣ⓩ⒵󰬇𝔷𝖟𝓏𝔃𝕫𝐙𝑍𝗭𝚉Ⓩ🄩ℨ𝖅𝒵𝓩🅩🅉󰬡ƶ




 f=󰲡chr(xᴍordᙎ¹₁0→󰑅󰲡x₁-x₀-1󰅂→₀+1)
f=󰲡chr(xᴍordᙎ¹₁0→󰑅⟥ᑀ≺-+1ᐸ→₀+1)

f(['a','b','d'])→☾
f(['A','C'])→☾
f(['a','b','c','d','e','f','h','i','j','k','l'])→☾






f=󰲧[(2*z*y*(n⹏q≔z/x)+n%q*2*x+z*y-z+x-1)*x*y/2∀n∈w⭥]
g=󰲧[[(m%z⹏x+m⹏z⹏y*z/x≡n)*m∀m∈w*y*z→⭥]Σ∀n∈w⭥]
☾g(3,4,12,16)


u=
v=
Σⱼ₌₍ₙ􊲗₍􋑫ₓ₎₎ʸ⁽ⁿ􋅙⁽ᶻ􋑬ˣ⁾⁺¹⁾⁻¹Σᵢ₌ₓᵤˣᵘ⁻¹(i+zj)

                       z
------------------------------------------------
0…(x-1) | x…(2x-1) | … | (x⋅(z/x-1))…(x⋅(z/x)-1)

Σx(x-1)/2 | Σ2x(2x-1)/2-x(x-1)/2 | … | z(z-1)/2-(z-x)(z-x-1)/2

n↦n%(z/x),n⹏(z/x)
u,v↦(small+big)xy
small=z*vy+x*u
big=z*((v+1)y-1)+x*(u+1)-1
small+big=2zvy+2xu+zy-z+x-1
u,v↦(2zvy+2xu+zy-z+x-1)xy
n↦(2zy(n⹏(z/x))+2x(n%(z/x))+zy-z+x-1)xy


f=󰲡🃌←x󰈲󰲡x∈‹ij.;!?:›󰅂→+←🃌←x󰈲󰲡x∈␛:
g=󰲡xᴍ󰲡x≡␛:→+←x∈‹ij.;!?:›󰅂Σ0
h=󰲡xſ⁰󰲣y≡␛:→+x+←y∈‹ij.;!?:›
i=󰲡xſˣ􊾡􋐏ˣ􋁤􋂝􊽧􋀬󰁅󰲣x+←y∈‹ij.;!?:›
j=󰲡x⨉‹ij.;!?::›ꟿ≡´Σ0
☾h(‹aij.;!?:›)

F=[1,2,3]ſ¹
F=󰲡[1,2,3]ſ¹x
