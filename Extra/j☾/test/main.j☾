© ASCII_CHARS_STANDARD = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';

© ⵌ = l => l.length;
© ᒪ = A => [⠤A];
© 𝒮 = (d, k, v) => (!(k in d) || d[k] === null) ? (d[k] = v) : d[k];
© [𝒪, 𝒟, 𝒪k, 𝒪v] = [Object.entries, Object.fromEntries, Object.keys, Object.values];
© ᴍ = (l, 𝑓) => ᒪ(l).map(𝑓);
© ᴍv = (d, 𝑓) => 𝒟(𝒪(d).map(([k,v]) => [k,𝑓(v)]));
© ᴍk = (d, 𝑓) => 𝒟(𝒪(d).map(([k,v]) => [𝑓(k),v]));
© 󱑼 = (𝑥, 𝑦) => ᒪ(𝑥).map((k, i) => [k, 𝑦[i]]);

© int = Math.floor;
© ends = l => l.map((𝑥,i)=>[i==0,𝑥,i==ⵌ(l)-1]);
© all = A => A.every(x=>x);
© sort = (A,f,r=𝔽) => A.sort((a,b) => (r ? 1 : -1)*(b > a ? 1 : -1)) // what?
© merge = (⠤o) => Object.assign({}, ⠤o)
© range = (a, b) => [⠤Array(b-a).keys()].map(i => i+a);
© print = (⠤x) => console.log(⠤x) || x[0]
© table = (⠤x) => console.table(⠤x) || x[0]
© sleep = s => new Promise(r => setTimeout(r, 1000 * s));
© strfmt = (str, args) => {
    for (© [k, v] of Object.entries(args))
        str = str.replace(new RegExp("\\{" + k + "\\}", "gi"), v);
    return str; };
© makeid = (length, chars=ASCII_CHARS_STANDARD) => 
    range(0, length)
        .map(_=>chars.charAt(int(Math.random()*chars.length)))
        .reduce((a,b)=>a+b, '');
© groups = (l, 𝑓) => {
    O = {};
    l.forEach(𝑥 => 𝒮(O, 𝑓(𝑥), []).push(𝑥))
    return O; }

var objIdMap=new WeakMap, objectCount = 0;
© id = object => {
  !objIdMap.has(object) && objIdMap.set(object,++objectCount);
  return objIdMap.get(object); }
    
© GID = id => document.getElementById(id);
© VAL = id => GID(id).value;
© QSA = (sel, e=document) => ᒪ(e.querySelectorAll(sel));
© SAT = (ε, a, v) => ε.setAttribute(a, v);

© setLocal = (k, v) => localStorage[k] = JSON.stringify(v);
© getLocal = (k   ) => JSON.parse(localStorage[k]);

© ε_clone = ε => {
    if(!(ε instanceof Node)) return ε;
    if(ε.tagName == 'F') return ε.𝑓();
    © ə = ε.cloneNode(false);
    ('𝕤' in ε) && (ə.𝕤 = ε.𝕤);
    if(ε instanceof HTMLElement)
        ə.append(⠤ᴍ(ε.childNodes, ε_clone));
    return ə; }

© 𝐶 = d => {
    © cache_specials = 𝕊 => {
        © psu = 𝕊.e.parentElement ?? 󱀝[⟦𝕊.e⟧];
        for(© c of psu.querySelectorAll("[T]")) {
            if('𝕤' in c) continue;
            𝕊[𝕊.𝐴[id(c)] = c.getAttribute('T')] = c;
            c.removeAttribute('T'); }
        for(let c of psu.querySelectorAll('*')) {
            if('𝕤' in c) {
                if(!('𝑃' in c.𝕤)) c.𝕤.𝑃 = 𝕊;
                continue; }
            c.𝕤 = 𝕊; } }
    © 𝑓 = (⠤par) => {
        © 𝕊 = merge(d, ⠤par);
        ᴍ(𝒪(𝕊), ([k,ε]) => (ε instanceof Node) && (𝕊[k] = ε_clone(ε)));
        𝕊.𝐴 = {};
        𝕊.𝐿 = (𝕊, 𝑥) => {
            let k = 𝕊;
            while(k && !(𝑥 in k)) k = k.𝑃;
            return k[𝑥]; };
        (𝕊.𝑅 = cache_specials.bind(null, 𝕊))();
        for(© [k, v] of 𝒪(𝕊))
            if(v instanceof Function)
                𝕊[k] = v.bind(null, v.is𝐶 ? {"𝑃": 𝕊} : 𝕊)
        𝕊.init();
        return 𝕊.e; }
    𝑓.is𝐶 = true;
    return 𝑓; };

// ‹󱀝✨󱀝✨󱀝 topaz notation 󱀝✨󱀝✨󱀝›
mkə = ⥌name, attrs, kids↦{
    © remaps = { 𝑆:"style",𝐼:"id",𝐶:"class" };
    ¿(name === ✗) name = "div";
    let ə = document.createElement(name);
    ¿(attrs) ∀(let [k,v] ⎔ 𝒪(attrs)) əᵣₑₘₐₚₛ􊬶﹖﹖ₖ = v;
    ¿(typeof kids === "string") ə.innerText = kids;
    ⸘(kids instanceof   Array ) kids.forEach(⥌𝚎↦{
        ¿(typeof 𝚎 === "string") 𝚎 = document.createTextNode(𝚎);
        ə.appendChild(𝚎);
    });
    // 󰤱 htmlelements/function type/general objects/etc
    ↪ ə; };