ch1, ch2 = ‹𝗻\^$.|?*+()[]{}›, ‹\]-›
ST = 0x10FF50
CF≔(CT≔ℵ(ch1+ch2→ᚤ→↨ꟿ∾󷺹⋄←󷹝←        ST+󷺽)) ᴍᴰ ᴙ
IF≔(IT≔ℵ(ch1+ch2→ᚤ→↨ꟿ∾󷺹⋄←󷹝←    🃌CF+ST+󷺽)) ᴍᴰ ᴙ
OF≔(OT≔ℵ(ch1    →ᚤ→↨ꟿ∾󷺹⋄←󷹝←🃌IF+🃌CF+ST+󷺽)) ᴍᴰ ᴙ
CT, IT, OT = CT⋄IT⋄OT ᐵꟿᴷ󰲣x󷹝
CF, IF, OF = CF⋄IF⋄OF ᐵꟿᴷ󰲣x󷹝
ch2ᐖIF􍴖󰂛󰂦􍶢􍫆≔␛\+⟞
OF = OFꟿⱽ󰲣␛\+y
DASH = CT􍴖􊯛₋
BL,BR = CT􍴖􊯛󰄗, CT􍴖􊯛󰄘
PL,PR = CT􍴖􊯛₍, CT􍴖􊯛₎
Q,BAR = CT􍴖􊯛﹖, CT􍴖􊯛􋕠
⊢ rgx_rans(x):
    x 󰒼= 𝜶≔󰲡ord(x₀)
    r = []
    ∀⟞ ∈ xᙡ􋂝ꜝ:
        h = ⟞ᴍ𝜶
        r.append(h₀+h₁+h₂≡3h₀+3 ⭜DASH⭝ ⟞₁)
    r ſ= 󰲣x+y⋅←y􍨄≠x􍨄
    ↪ r.translate(IT)
⮌functools⨡cache
⊢ rgx_golfatron(𝕏):
    @cache
    ⊢ 𝼝(x):
        t, χ = xᴮ
        ↪ χ󰲡x₀󰅂⥉ℵ→ꟿ󰲣x, 𝼝(H≔𝑡(yᴍ󰲡x₁﹕)), ᐦ∈H∧H⋁⭜1⭝0󰅂
    ⊢ ϙ(x):
        s, m = x ᴮ 󰲡len(x)≠1
        mᴍ=󰲡ᐦ.join(x.translate(OT))
        ¿s≔ᐦ.join(s): m.append(s🃌≡1 ⭜s.translate(OT)⭝ BL+rgx_rans(s)+BR)
        ↪ m
    ⊢ ŧ(x):
        α,β,γ=x
        r = α
        ¿β∧β≔ϙ(βᴍŧ):
            h = BAR.join(β)
            ¿α∧len(β)>1: h = PL+h+PR
            r += h
        ↪ γ∧α ⭜r+Q⭝ r
    𝕏 = 𝼝(𝑡(sorted(𝕏,key=󰲡¯len(x),x󰅂)))
    ↪ ŧ((ᐦ,𝕏,✗)).translate(CF).translate(IF).translate(OF)