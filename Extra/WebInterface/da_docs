󱀘 ; Python "class"
⨡ ; Python "import"
⮂ ; Python "yield"
↪ ; Python "return"
⮌ ; Python "from"
↺ ; Python "continue"
⇥ ; Python "break"
➰ ; Python "while"
∀ ; Python "for"
@ ; Python "@"
⠤ ; Python "*" (For vargs)
⠶ ; Python "**" (For kargs)
¿ ; Python "if"
⸘ ; Python "elif"
¡ ; Python "else"

⭜ ; ternary if
    "x ⭜ y ⭝ z" ; y if x else z
    "x ⭜ y" ; y if x else □
⭝ ; ternary else
    %REF⭝%

⬅ ; push right into left (Strongest)
➡ ; push left into right (Strongest)
← ; push right into left (Medium)
⥉ ; swap right and left (Medium)
→ ; push left into right (Medium)
⭠ ; push right into left (Weakest)
⭢ ; push left into right (Weakest)

≔ ; Assign to left
    "x ≔ 2+2"
    "x.y[2] ≔ 2+2"
≕ ; Assign to right
    "2+2 ≕ x"
    "2+2 ≕ x.y[2]"

⨳ ; Assertion
    "𝑜 ⨳" = "⨳ 𝑜" ⟶ Asserts 𝑜 is truthy
    "𝑜₁ ⨳ 𝑜₂" ⟶ Asserts 𝑜₁ is truthy, puts 𝑜₂ in error

∨ ; OR (short circuits)
⩔ ; OR (doesn't short circuit)
󷺥 ; NOR (short circuits)
󷺫 ; NOR (doesn't short circuit)
󷺤 ; XOR
󷺦 ; NXOR

∧ ; AND (short circuits)
⩓ ; AND (doesn't short circuit)
󷺒 ; NAND (short circuits)
󷺬 ; NAND (doesn't short circuit)

≡ ; equals
≠ ; not equal
≤ ; less than or equal to
≥ ; greater than or equal to
< ; less than
> ; greater than
∈ ; element of right
∉ ; not element of right
∋ ; element of left
∌ ; not element of left
∣ ; divides
∤ ; does not divide
⊂ ; subset of right
⊃ ; subset of left
⊊ ; subset of not equal to right
⊋ ; subset of not equal to left
⊄ ; not subset of right
⊅ ; not subset of left

ꟿ ; starmap
ᴍ ; map
 ; threadmap
ſ ; fold
Ϝ ; accumulate
⨁ ; sum
⨀ ; product
󰈲 ; filter positive
󰈳 ; filter negative
󰒼 ; sort ascending
󰒽 ; sort decending
 ; group by
ᙡ ; window, with middle, with sides
ᙧ ; window, with middle, no sides
ᙎ ; window, no middle, with sides
ᗢ ; window, no middle, no sides

ᐹ ; left is type of right / get class of
ᐴ ; right is type of left / get class of
󷹵 ; left is not type of right
󷹴 ; right is not type of left
󱑼 ; zip
 ; random float
󱅏 ; random int
 ; shuffle

| ; bitwise or

^ ; bitwise xor

& ; bitwise and

⪡ ; bitshift left / circle arr left 
⪢ ; bitshift right / circle arr right 

∓ ; minus plus
± ; plus minus
+ ; add
- ; subtract

∘ ; call left with right
○ ; compose functions with balanced args, overflow right
⍜ ; compose functions with balanced args, overflow left
󰬫 ; compose functions, overflow extra args to right
󰬩 ; compose functions, overflow extra args to left
󱖚 ; 󰤱, NotImplemented
󱖘 ; 󰤱, NotImplemented
 ; curry function
⊚ ; loop
⍟ ; loop returning all iterations except final
⊛ ; loop returning all iterations
⊜ ; loop until fixed point
🟕 ; find cycle
🟖 ; find cycle, include prefix
 ; error raiser / error or-er
󰔶 ; return arg / retry with right
 ; return exception / custom error handle
ᣆ ; conditional function application

◄ ; return left arg
► ; return right arg

⋄ ; join into list

∪ ; union

∩ ; intesection

∖ ; set minus
⨉ ; cross product
⊞ ; table product

≅ ; is same object
≇ ; is not same object
⋅ ; multiply
÷ ; divide
⹏ ; integer divide
% ; modulo
√ ; root
! ; factorial
⋀ ; all
⋁ ; any
⫰ ; absolute value
⫯ ; negative absolute value
⨝ ; join
⟕ ; join include left
⟗ ; join include left and right
⟖ ; join include right
󷹕 ; before
󷹓 ; before and including
󰑅 ; at condition
󷹔 ; after and including
󷹖 ; after
󷸹 ; range excluding end
󷸸 ; range excluding start and end
󷸻 ; range
󷸺 ; range excluding start
⤈ ; min
󷹄 ; constrain
⤉ ; max
↨ ; enumerate (zip with index)
⭥ ; iterable to indices
⬓ ; round down
▢ ; round
⬒ ; round up
⍭ ; magic string split
󰸵 ; pad left
󰸷 ; pad right
󷹌 ; split include all seperators
󷹍 ; split include 1-per-consecutive seperators
󷹎 ; split disregard seperators
⬄ ; strip
𝌂 ; partition
󰌷 ; chain iterables
ᴙ ; reverse
󰛔 ; string replacement
ᚤ ; first unique
☾ ; print
⛶ ; enlist arguments
⍉ ; transpose
ⴵ ; sign of number
🃌 ; cardinality/length
󷹝 ; str⟷int involution
󷹜 ; str to int / change base
󷸚 ; real part
󷸛 ; imag part
󷸙 ; ĵ part
󷸘 ; 󷺈 part
󷸜 ; tuple of real/imag parts
󷸗 ; tuple of real/ĵ parts
󷸖 ; tuple of real/󷺈 parts
󷸕 ; tuple of real/imag/ĵ/󷺈 parts

¬ ; not
¯ ; negate

⌃ ; exponential

 ; splat function
∾ ; reverse function args
 ; call function without args

󰻾 ; identify
ℵ ; magic namespace: iterates by pairs
ℶ ; magic namespace: iterates by values
∅ ; empty set
⍁ ; empty list

󰮈 ; signal delete element from iteration
𝗙 ; check if function
𝗜 ; check if iterable
𝗛 ; check if hashable, if so, return hashed value
􋐳 ; cos
􋐲 ; sin
􋐴 ; tan
􋑯 ; log
✓ ; true
ⴳ ; truthy function that always returns True
✗ ; false
ⴴ ; falsey function that always returns False
□ ; none
ᐦ ; empty string
∞ ; infinity
î ; imaginary unit
ℇ ; euler's number
τ ; tau
π ; ½τ
󷺍 ; ½π
󷺎 ; ¼π
󷺏 ; ⅛π