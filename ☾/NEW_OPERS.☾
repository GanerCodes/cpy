 󷰙󷰚 󷰛󷰜󷰝󷰞󷰟󷰠󷰡󷰢󷰣󷰤󷰥󷰦󷰧󷰨󷰩󷰪󷰫󷰬󷰭󷰮󷰯󷰰󷰱
 ␀CATᴮ between 󷰮 󷰯
 ␀TACᴮ between 󷰟 󷰠

 ⨡ᴺᴾ󰁔
 ;,ᴺᴾ󰁔
 ∀ =⮂↪⮌➰ᴺᴾ󰁔 ↺⇥ᴺ󰁔 ⠤⠶ᴾ󰁔󰁞 :ᴮᴾᴺ󰁏󰁔
 ␀ARW_1ᴵᴮ
 ⭝ᴺᴮᴵ󰁜
 ⭜ᴮᴵ󰁜
 ␀ARW_2ᴵᴮ
 ¡ᴮᴵ󰁜
 ⸘ᴺᴾ󰁔 ¿ᴺᴮᴵ󰁜
 ␀ASGN_MRK_Lᴮ ␀ASGN_MRK_Rᴮ ≔󷸉󷸊󷸋≕󷸎󷸌󷸍ᴮ󰁜 
 ␀ARW_3ᴵᴮ


 ; 󰧴 󰧳

 ⟨symbol, ⴲ, color, combo, ƒ⟩

 always add ᴺ
 make 󰁢 automatic unless explicitly removed
 𝚡. auto add 󰀒, .𝚡 auto add ᴾ
 󷺤 auto add 󰀒ᴾ
 ∨ auto add ᴮ󰀒ᴾ
 ∧⩚ auto add ᴮ
 󷸏 auto add ᴮᴾ, 󷸐 auto add ᴮ󰀒
 ≺ ᔨ´꜠ᵜ
 PURP
 ☾ᴮ = 𝚡󷺤􊽨𝚡

 MMM
 M█|M
 MMM

⊢ OPER(ⴲ, ƒ):
    ⴲ = 󰌷␛󷸏␛󷸐󰛔􍳟󰌷␛∨
    ϙ = ⴲ = ᐦ.join(ⴲ.split())
    𝖭 = (ⴲ∋␛􊽨)+2⋅(␛􋅂∈ⴲ)
    ⴲ = [x∀x∈ⴲ¿x∉␛􊽨␛􋅂]
    l=r=ᐦ
    ¿ⴲ:
        ¿ⴲ₀∉‹.󷺤∧⩚∨›: l = ⴲ.pop(0)
        ¿ⴲ􍨄∉‹.󷺤∧⩚∨›: r = ⴲ.pop(󷰾)
        ⴲ = ᐦ.join(ⴲ)
        ¿ⴲ≡␛⩚ ∧ ¬𝖭: assert ✗, ‹⩚ expects mod, use ∧ here›
    ¡: ⴲ = ᐦ
    𝑈1 = ⴲ∧(ⴲ≡␛. ∨ ␛󷺤≡ⴲ∧l≡r)
    𝑈2 = ¬𝑈1∧ⴲ≡␛󷺤

    ⊢ curry(𝖿, ⠤𝔸):
        i = 𝔸.index(⬤)
        ⊢ ꬶ(𝚡, ⠤𝓐):
            r = 𝖿(⠤𝔸﹕ᵢ, 𝚡, ⠤𝔸ᵢ₊₁﹕)
            ∀z∈𝓐: r = r(z)
            ↪ r
        ↪ ꬶ

    ⊢ Ⴚ(𝚡=␀, 𝚢=␀, 𝚖=␀):
         ‹ϙ="⟦ϙ⟧" ⟨⟦𝚡⟧ ⟦𝚢⟧⟩ 𝚖=⟦𝚖⟧›☾
        assert 𝖭 ∨ 𝚖≅␀, ‹⟦ϙ⟧ doesn't accept modifier›
        assert ¬(𝑈1∨𝑈2) ∨ 𝚡≅␀∨␀≅𝚢, ‹⟦ϙ⟧ is monadic›
        assert ⴲ ∨ 1≥⭠(𝚡≇␀)+(𝚢≇␀)+(𝚖≇␀), ‹⟦ϙ⟧ is niladic›
        ¿𝚡≅␀ ∧ 𝚢≅␀ ∧ 𝚖≅␀: ↪ ƒ()  jank?
        𝕒 = 𝚡≅␀⭜𝚢⭝𝚡
        ¿¬ⴲ: ↪ ƒ(𝕒≇␀⭜𝕒⭝𝚖)
        𝙼 = 𝚖≇␀∧𝖭 ⭜(𝚖,)⭝ ()
        ¿𝕒≅␀: ↪ curry(Ⴚ,⬤,␀,𝚖)  only have mod fill in 1st val
        ⸘¬mod_ok ≔ 𝚖≇␀∨𝖭<2:
            ¿𝚡≅␀∨𝚢≅␀:
                ¿ⴲ≡␛⩚: ↪ curry(Ⴚ,⬤,␀,𝕒)
                ¿ⴲ≡␛∧: ↪ 𝚡≇␀∨l≡r ⭜curry(Ⴚ,𝕒,⬤,𝚖)⭝ curry(Ⴚ,⬤,𝚢,𝚖)
        ⸘𝚡≇␀∧␀≇𝚢: ↪ ƒ(𝚡,𝚢,⠤𝙼)
        ⸘𝑈1     : ↪ ƒ(𝕒  ,⠤𝙼)
        ⸘𝑈2     : ↪        𝚡≇␀     ⭜ƒ    (  𝚡,␀,⠤𝙼)⭝ ƒ    (  ␀,𝚢,⠤𝙼)
        ⸘ⴲ≡␛∨   : ↪        𝚡≇␀∨l≡r ⭜ƒ    (  𝕒,␀,⠤𝙼)⭝ ƒ    (  ␀,𝚢,⠤𝙼)
        ¡       : ↪ 𝚡≇␀∨l≡r ⭜curry(Ⴚ,𝕒,⬤, 𝚖)⭝ curry(Ⴚ,⬤,𝚢, 𝚖)
        ¿𝖭≡2: ↪ curry(Ⴚ,𝚡,𝚢, ⬤)
        ¿𝖭≡1: ↪        ƒ    (  𝚡,𝚢,⠤𝙼)
        assert ✗, "how"
    ↪ Ⴚ

 ☾ = 𝚡󷺤􊽨𝚡
¿__name__ ≡ "__main__":
    ⨳ OPER("  􋅂 ", 𝚲𝔸)(1)             ≡ (1,)
    ⨳ OPER("  􋅂 ", 𝚲𝔸)(␀,1)           ≡ (1,)
    ⨳ OPER("  􋅂 ", 𝚲𝔸)(␀,␀,1)         ≡ (1,)
    ⨳ OPER("𝚡∧􋅂𝚢", 𝚲𝔸)(1,2)(99)       ≡ (1,2,99)
    ⨳ OPER(" .􊽨𝚡", 𝚲𝔸)(2)             ≡ (2,)
    ⨳ OPER(" .􊽨𝚡", 𝚲𝔸)(1,𝚖=2)         ≡ (1,2)
    ⨳ OPER(" .􊽨𝚡", 𝚲𝔸)(␀,1,𝚖=2)       ≡ (1,2)
    ⨳ OPER("𝚡.􊽨 ", 𝚲𝔸)(𝚖=2)(5)        ≡ (5,2)
    ⨳ OPER("𝚡.􋅂 ", 𝚲𝔸)(2)(5)          ≡ (2,5)
    ⨳ OPER("𝚡󷺤􋅂𝚢", 𝚲𝔸)(␀,2)(5)        ≡ (␀,2,5)
    ⨳ OPER("𝚡󷺤􋅂𝚢", 𝚲𝔸)(2,␀)(5)        ≡ (2,␀,5)
    ⨳ OPER("𝚡󷺤􋅂𝚡", 𝚲𝔸)(2,␀)(5)        ≡ (2,5)
    ⨳ OPER("𝚡󷺤􋅂𝚡", 𝚲𝔸)(␀,2)(5)        ≡ (2,5)
    ⨳ OPER("𝚡∧􋅂𝚢", 𝚲𝔸)(2)(5,6)        ≡ (2,5,6)
    ⨳ OPER("𝚡∧􊽨𝚢", 𝚲𝔸)(␀,2)(5)        ≡ (5,2)
    ⨳ OPER("𝚡∧􊽨𝚡", 𝚲𝔸)(␀,2)(5)        ≡ (2,5)
    ⨳ OPER("𝚡∧􋅂𝚢", 𝚲𝔸)(2,␀)(5)(9)     ≡ (2,5,9)
    ⨳ OPER("𝚡∧􋅂𝚢", 𝚲𝔸)(␀,2)(5)(9)     ≡ (5,2,9)
    ⨳ OPER("𝚡∧􋅂𝚡", 𝚲𝔸)(␀,2)(5)(9)     ≡ (2,5,9)
    ⨳ OPER("𝚡⩚􋅂𝚢", 𝚲𝔸)(2)(5,6)        ≡ (5,6,2)
    ⨳ OPER("𝚡⩚􋅂𝚢", 𝚲𝔸)(2,␀)(5)(9)     ≡ (5,9,2)
    ⨳ OPER("𝚡⩚􋅂𝚢", 𝚲𝔸)(␀,2)(5)(9)     ≡ (5,9,2)
    ⨳ OPER("𝚡⩚􋅂𝚢", 𝚲𝔸)(5,2)(9)        ≡ (5,2,9)
    ⨳ OPER("𝚡⩚􋅂𝚢", 𝚲𝔸)(5,2,9)         ≡ (5,2,9)
    ⨳ OPER("𝚡∨􋅂𝚢", 𝚲𝔸)(␀,2)(5)        ≡ (␀,2,5)
    ⨳ OPER("𝚡∨􋅂𝚢", 𝚲𝔸)(2,5)(7)        ≡ (2,5,7)
    ⨳ OPER("𝚡∨􋅂𝚡", 𝚲𝔸)(␀,5)(7)        ≡ (5,␀,7)
    ⨳ OPER("𝚡∨􋅂𝚡", 𝚲𝔸)(5,␀)(7)        ≡ (5,␀,7)
    ⨳ OPER("𝚡∨􋅂𝚢", 𝚲𝔸)(␀,5)(7)        ≡ (␀,5,7)
    ⨳ OPER("𝚡󷸏􋅂𝚡", 𝚲𝔸)(5,␀)(7)        ≡ (5,␀,7)
    ⨳ OPER("𝚡󷸐􋅂𝚢", 𝚲𝔸)(␀,5)(7)        ≡ (␀,5,7)

    "yay"☾
